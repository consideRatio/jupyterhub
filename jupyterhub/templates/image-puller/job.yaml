# a job hooked with helm to await the image-puller deamonset to finish its work
{{ if .Values.imagePuller.hook.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: image-awaiter-{{.Release.Name}}-{{.Release.Revision}}-{{.Release.Time.Seconds}}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "10"
spec:
  template:
    spec:
      restartPolicy: Never
      {{ if .Values.rbac.enabled }}
      serviceAccountName: image-awaiter
      {{- end }}
      containers:
        - image: {{ .Values.imagePuller.hook.image.name }}:{{ .Values.imagePuller.hook.image.tag }}
          name: image-awaiter
          imagePullPolicy: IfNotPresent
          command:
            - /await-images
            - -ca-path=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - -auth-token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
            - -api-server-address=https://$(KUBERNETES_SERVICE_HOST):$(KUBERNETES_SERVICE_PORT)
            - -namespace=$(NAMESPACE)
              # This is explicitly *not* quoted, since we are passing
              # This to a go program without any shell interpolation
            - {{ .Values.singleuser.image.name }}:{{ .Values.singleuser.image.tag }}

              {{ if not .Values.singleuser.cloudMetadata.enabled }}
            - {{ .Values.singleuser.networkTools.image.name }}:{{ .Values.singleuser.networkTools.image.tag }}
              {{ end }}
              {{ range $key, $value := .Values.imagePuller.extraImages }}
            - {{ $value.name }}:{{ $value.tag }}
              {{ end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
{{ end }}
